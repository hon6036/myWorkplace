백트래킹

DFS 수행 -> 유망한 노드 검토 -> 서브 트리 이동 -> 백트래킹 수행
1. DFS를 수행해 노드 찾음
2. 방문한 노드를 포함해서 유망한 노드이면 서브트리로 이동하고 그렇지 않으면 백트래킹 수행
3. 방문한 노드의 하위 노드로 이동하여 다시 재귀를 통해 DFS를 수행
4. 방문한 노드를 가지치기를 하고 상위 노드로 백트래킹 한 후 DFS를 다시 수행

백준 15649  

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오. 
    1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
    
def find(index, n, m):
    if index == m:
        for i in range(m):
            print(result[i],end=' ')
        print()
        return
    for i in range(1,n+1):
        if check[i] == True:
            continue
        result[index] = i
        check[i] = True
        find(index+1,n, m)
        check[i] = False
        
n, m = map(int, input().split())
check = [False] *(n+1)
result = [0] * m
find(0,n,m)

n = 4, m = 4
1 2 3 4 
1 2 4 3 
1 3 2 4 
1 3 4 2 
1 4 2 3 
1 4 3 2 
2 1 3 4 
2 1 4 3 
2 3 1 4 
2 3 4 1 
2 4 1 3 
2 4 3 1 
3 1 2 4 
3 1 4 2 
3 2 1 4 
3 2 4 1 
3 4 1 2 
3 4 2 1 
4 1 2 3 
4 1 3 2 
4 2 1 3 
4 2 3 1 
4 3 1 2 
4 3 2 1 



백준 15650  조합

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.
    1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열
    고른 수열은 오름차순이어야 한다.
    
def find(index, n, m):
    if index == m:
        for i in range(m):
            print(result[i],end=' ')
        print()
        return
    for i in range(1,n+1):
        if check[i] == True:
            continue
        result[index] = i
        for j in range(i+1):
            check[j] = True
        find(index+1,n, m)
        for j in range(1, n+1):
            check[j] = False
        
n, m = map(int, input().split())
check = [False] *(n+1)
result = [0] * m
find(0,n,m)

n = 4, m = 4

1 2 3 4 


백준 15651  중복 순열

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

    1부터 N까지 자연수 중에서 M개를 고른 수열
    같은 수를 여러 번 골라도 된다.

def find(index, n, m):
    if index == m:
        for i in range(m):
            print(result[i], end = ' ')
        print()
        return
    for i in range(1, n+1):
        result[index] = i
        find(index+1, n, m)
        check[i] = True
n,m = map(int, input().split())
check = [False] *(n+1)
result = [0] * m
find(0,n,m)

 
n = 3, m = 3

1 1 1 
1 1 2 
1 1 3 
1 2 1 
1 2 2 
1 2 3 
1 3 1 
1 3 2 
1 3 3 
2 1 1 
2 1 2 
2 1 3 
2 2 1 
2 2 2 
2 2 3 
2 3 1 
2 3 2 
2 3 3 
3 1 1 
3 1 2 
3 1 3 
3 2 1 
3 2 2 
3 2 3 
3 3 1 
3 3 2 
3 3 3 


백준 15652 중복 조합

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

    1부터 N까지 자연수 중에서 M개를 고른 수열
    같은 수를 여러 번 골라도 된다.
    고른 수열은 비내림차순이어야 한다.
    길이가 K인 수열 A가 A1 ≤ A2 ≤ ... ≤ AK-1 ≤ AK를 만족하면, 비내림차순이라고 한다.


def find(index, n, m,l):
    if index == m:
        for i in range(m):
            print(result[i], end = ' ')
        print()
        return
    for i in range(n):
        if arr[i] >= l:
            result[index] = i
            l = arr[i]
            result[index] = arr[i]
            find(index+1, n, m,  l)
            check[i] = True
n,m = map(int, input().split())
check = [False] *(n+1)
arr = range(1, n+1)
result = [0] * m
find(0,n,m,0)

n = 3, m = 3

1 1 1 
1 1 2 
1 1 3 
1 2 2 
1 2 3 
1 3 3 
2 2 2 
2 2 3 
2 3 3 
3 3 3 

