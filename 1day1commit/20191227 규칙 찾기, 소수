백준 1193

1/1 -> 1/2 -> 2/1 -> 3/1 -> 2/2 -> 1/3 -> 1/4 -> 2/3 -> 3/2 -> 4/1 -> 5/1
로 반복 되는 분수
분모 1  2 1  1 2 3  4 3 2 1  1
분자 1  1 2  3 2 1  1 2 3 4  5
개수에 대한 공차가 1에서 부터 1씩 증가하고
분모는 짝수 일 때 공차에서 부터 1씩 감소 홀수 일 땐 1 부터 공차 분자는 그 반대

먼저 공차 부터 구하려면
While n > 0:
    n -= i
    i += 1

n = i + n - 1  <- 해당 값

if i % 2 == 0:
    result = str(i-n) + '/' + str(n)
else:
    result = str(n) + '/' + str(i-n)

print(result)

에라토스테네스의 체

def prime_list(n):
    # 에라토스테네스의 체 초기화: n개 요소에 True 설정(소수로 간주)
    sieve = [True] * n

    # n의 최대 약수가 sqrt(n) 이하이므로 i=sqrt(n)까지 검사
    m = int(n ** 0.5)
    for i in range(2, m + 1):
        if sieve[i] == True:           # i가 소수인 경우 
            for j in range(i+i, n, i): # i이후 i의 배수들을 False 판정
                sieve[j] = False

    # 소수 목록 산출
    return [i for i in range(2, n) if sieve[i] == True]
    
    


